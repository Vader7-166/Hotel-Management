@using static Hotel_Management.Areas.Admin.Controllers.DashboardController
@{
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
    ViewBag.Title = "Admin Dashboard";
}
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

<div class="dashboard-content container-fluid py-4">
    <!-- Header -->
    <div class="row mb-4">
        <div class="col-12">
            <h3 class="mb-0 h4 fw-bold">Dashboard Hotel Management</h3>
            <p class="text-muted mb-0">Overview of operations and revenue</p>
        </div>
    </div>

    <!-- Thống kê tổng quan -->
    <div class="row g-3 mb-4">
        <div class="col-xl-3 col-md-6">
            <div class="card stat-card">
                <div class="card-body p-3">
                    <div class="d-flex justify-content-between align-items-center">
                        <div>
                            @* Data *@
                            <p class="text-muted text-sm mb-1">Total Rooms</p>
                            <h4 class="mb-0 fw-bold">@ViewBag.TotalRoom</h4>
                            <small class="text-muted">room</small>
                        </div>
                        <div class="icon-box bg-gradient-blue text-white">
                            <span class="material-symbols-rounded">hotel</span>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="col-xl-3 col-md-6">
            <div class="card stat-card">
                <div class="card-body p-3">
                    <div class="d-flex justify-content-between align-items-center">
                        <div>
                            @* Data *@
                            <p class="text-muted text-sm mb-1">On Renting</p>
                            <h4 class="mb-0 fw-bold text-danger">@ViewBag.CurrentlyRenting</h4>
                            <small class="text-success fw-bold">+@ViewBag.MoreThanYesterday today</small>
                        </div>
                        <div class="icon-box bg-gradient-green text-white">
                            <span class="material-symbols-rounded">meeting_room</span>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="col-xl-3 col-md-6">
            <div class="card stat-card">
                <div class="card-body p-3">
                    <div class="d-flex justify-content-between align-items-center">
                        <div>
                            <p class="text-muted text-sm mb-1">Available Rooms</p>
                            <h4 class="mb-0 fw-bold text-success">@ViewBag.AvailableRooms</h4>
                            <small class="text-muted">room</small>
                        </div>
                        <div class="icon-box bg-gradient-orange text-white">
                            <span class="material-symbols-rounded">door_open</span>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="col-xl-3 col-md-6">
            <div class="card stat-card">
                <div class="card-body p-3">
                    <div class="d-flex justify-content-between align-items-center">
                        <div>
                            <p class="text-muted text-sm mb-1">Today revenue</p>
                            <h4 class="mb-0 fw-bold">@($"{ViewBag.RevenueToday}M")</h4>
                            <small class="text-success fw-bold">+12.5%</small>
                        </div>
                        <div class="icon-box bg-gradient-red text-white">
                            <span class="material-symbols-rounded">payments</span>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Biểu đồ và tỷ lệ lấp đầy -->
    <div class="row g-3 mb-4">
        <!-- Tỷ lệ lấp đầy -->
        <div class="col-lg-3 col-md-6">
            <div class="card stat-card h-100">
                <div class="card-body p-3">
                    <h6 class="fw-bold mb-3">Fill rate</h6>
                    <div class="text-center py-3">
                        <svg class="progress-ring" width="150" height="150">
                            <circle class="progress-ring-circle"
                                    stroke="#e5e7eb"
                                    stroke-width="12"
                                    fill="transparent"
                                    r="62"
                                    cx="75"
                                    cy="75" />
                            <circle class="progress-ring-circle"
                                    stroke="#667eea"
                                    stroke-width="12"
                                    fill="transparent"
                                    r="62"
                                    cx="75"
                                    cy="75"
                                    stroke-dasharray="389.557"
                                    stroke-dashoffset="100"
                                    id="occupancyCircle" />
                        </svg>
                        <div style="margin-top: -105px;">
                            <h2 class="fw-bold mb-0" id="occupancyPercent">@($"{((float)ViewBag.CurrentlyRenting / (float)ViewBag.TotalRoom)*100:0.0}%")</h2>
                            <small class="text-muted">@($"{ViewBag.CurrentlyRenting}/{ViewBag.TotalRoom} room")</small>
                        </div>
                    </div>
                    <div class="mt-3">
                        <div class="d-flex justify-content-between mb-2">
                            <span><span class="room-status-indicator status-occupied"></span>On Renting</span>
                            <span class="fw-bold">@ViewBag.CurrentlyRenting</span>
                        </div>
                        <div class="d-flex justify-content-between mb-2">
                            <span><span class="room-status-indicator status-available"></span>Available</span>
                            <span class="fw-bold">@ViewBag.AvailableRooms</span>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Biểu đồ doanh thu -->
        <div class="col-lg-5 col-md-6">
            <div class="card stat-card h-100">
                <div class="card-body p-3">
                    <h6 class="fw-bold mb-1">Revenue By Day</h6>
                    <p class="text-muted text-sm mb-3">Last 7 Days</p>
                    <div class="chart-container">
                        <canvas id="revenueChart"></canvas>
                    </div>
                </div>
            </div>
        </div>

        <!-- Biểu đồ so sánh tháng -->
        <div class="col-lg-4 col-md-12">
            <div class="card stat-card h-100">
                <div class="card-body p-3">
                    <h6 class="fw-bold mb-1">Revenue By Month</h6>
                    <p class="text-muted text-sm mb-3">Last 6 Months</p>
                    <div class="chart-container">
                        <canvas id="monthlyChart"></canvas>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Check-in/Check-out hôm nay -->
    <div class="row g-3">
        <div class="col-lg-6">
            <div class="card stat-card">
                <div class="card-body p-3">
                    <div class="d-flex justify-content-between align-items-center mb-3">
                        <h6 class="fw-bold mb-0">Check-in Today</h6>
                        <span class="badge bg-primary">@ViewBag.TotalCheckIn customers</span>
                    </div>
                    <div class="table-responsive">
                        <table class="table table-hover align-middle mb-0">
                            <thead class="table-light">
                                <tr>
                                    <th class="text-xs">Rooom</th>
                                    <th class="text-xs">Customer</th>
                                    <th class="text-xs">Check-in Time</th>
                                    <th class="text-xs text-center">Status</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var item in ((List<CheckInOutInfo>)ViewBag.CheckInList).Take(5))
                                {
                                    var badgeClass = item.Status == "Đã check-in" ? "bg-success" : "bg-warning";
                                    <tr>
                                        <td><span class="fw-bold">@item.Room</span></td>
                                        <td>@item.Customer</td>
                                        <td class="text-muted">@item.CheckTime</td>
                                        <td class="text-center">
                                            <span class="badge @badgeClass">@item.Status</span>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>

        <div class="col-lg-6">
            <div class="card stat-card">
                <div class="card-body p-3">
                    <div class="d-flex justify-content-between align-items-center mb-3">
                        <h6 class="fw-bold mb-0">Check-out Today</h6>
                        <span class="badge bg-danger">@ViewBag.TotalCheckOut customers</span>
                    </div>
                    <div class="table-responsive">
                        <table class="table table-hover align-middle mb-0">
                            <thead class="table-light">
                                <tr>
                                    <th class="text-xs">Room</th>
                                    <th class="text-xs">Customer</th>
                                    <th class="text-xs">Check-out Time</th>
                                    <th class="text-xs text-center">Status</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var item in ((List<CheckInOutInfo>)ViewBag.CheckOutList).Take(5))
                                {
                                    var badgeClass = item.Status switch
                                    {
                                        "Đã check-out" => "bg-success",
                                        "Đang dọn phòng" => "bg-info",
                                        "Chưa check-out" => "bg-warning",
                                        _ => "bg-secondary"
                                    };
                                    <tr>
                                        <td><span class="fw-bold">@item.Room</span></td>
                                        <td>@item.Customer</td>
                                        <td class="text-muted">@item.CheckTime</td>
                                        <td class="text-center">
                                            <span class="badge @badgeClass">@item.Status</span>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
    // Biểu đồ doanh thu theo ngày
    const revenueData = [@string.Join(", ", ViewBag.RevenuePerDay)];
    const revenueCtx = document.getElementById('revenueChart').getContext('2d');
    const revenueChart = new Chart(revenueCtx, {
        type: 'line',
        data: {
            labels: ['T2', 'T3', 'T4', 'T5', 'T6', 'T7', 'CN'],
            datasets: [{
                label: 'revenue (milions VND)',
                data: revenueData,
                borderColor: '#667eea',
                backgroundColor: 'rgba(102, 126, 234, 0.1)',
                borderWidth: 3,
                fill: true,
                tension: 0.4,
                pointRadius: 5,
                pointBackgroundColor: '#667eea',
                pointBorderColor: '#fff',
                pointBorderWidth: 2
            }]
        },
        options: {
            responsive: true,
            maintainAspectRatio: false,
            plugins: {
                legend: {
                    display: false
                },
                tooltip: {
                    backgroundColor: 'rgba(0, 0, 0, 0.8)',
                    padding: 12,
                    titleColor: '#fff',
                    bodyColor: '#fff',
                    displayColors: false,
                    callbacks: {
                        label: function(context) {
                            return context.parsed.y + ' milions VND';
                        }
                    }
                }
            },
            scales: {
                y: {
                    beginAtZero: true,
                    grid: {
                        borderDash: [5, 5]
                    },
                    ticks: {
                        callback: function(value) {
                            return value + 'M';
                        }
                    }
                },
                x: {
                    grid: {
                        display: false
                    }
                }
            }
        }
    });

    // Biểu đồ doanh thu theo tháng
    const monthlyData = [@string.Join(", ", ViewBag.RevenueMonthly)]
    const monthlyCtx = document.getElementById('monthlyChart').getContext('2d');
    const monthlyChart = new Chart(monthlyCtx, {
        type: 'bar',
        data: {
            labels: ['T5', 'T6', 'T7', 'T8', 'T9', 'T10'],
            datasets: [{
                label: 'Incom (billions VND)',
                data: monthlyData,
                backgroundColor: [
                    'rgba(102, 126, 234, 0.8)',
                    'rgba(118, 75, 162, 0.8)',
                    'rgba(240, 147, 251, 0.8)',
                    'rgba(245, 87, 108, 0.8)',
                    'rgba(79, 172, 254, 0.8)',
                    'rgba(0, 242, 254, 0.8)'
                ],
                borderRadius: 8,
                borderWidth: 0
            }]
        },
        options: {
            responsive: true,
            maintainAspectRatio: false,
            plugins: {
                legend: {
                    display: false
                },
                tooltip: {
                    backgroundColor: 'rgba(0, 0, 0, 0.8)',
                    padding: 12,
                    callbacks: {
                        label: function(context) {
                            return context.parsed.y + 'B VND';
                        }
                    }
                }
            },
            scales: {
                y: {
                    beginAtZero: true,
                    grid: {
                        borderDash: [5, 5]
                    },
                    ticks: {
                        callback: function(value) {
                            return value + 'B';
                        }
                    }
                },
                x: {
                    grid: {
                        display: false
                    }
                }
            }
        }
    });

    // Animate occupancy circle
    const circle = document.getElementById('occupancyCircle');
    const radius = circle.r.baseVal.value;
    const circumference = radius * 2 * Math.PI;
    const occupancyRate = @($"{((float)ViewBag.CurrentlyRenting / (float)ViewBag.TotalRoom) * 100:0.0}");
    const offset = circumference - (occupancyRate / 100) * circumference;

    circle.style.strokeDasharray = `${circumference} ${circumference}`;
    circle.style.strokeDashoffset = circumference;

    setTimeout(() => {
        circle.style.strokeDashoffset = offset;
    }, 100);
</script>



<style>
    .dashboard-content {
        background-color: #f8f9fa;
        font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    }

    .dashboard-content .material-symbols-rounded {
        font-family: 'Material Symbols Rounded';
        font-weight: normal;
        font-style: normal;
        font-size: 24px;
        line-height: 1;
        letter-spacing: normal;
        text-transform: none;
        display: inline-block;
        white-space: nowrap;
        word-wrap: normal;
        direction: ltr;
    }

    .stat-card {
        border-radius: 12px;
        border: none;
        box-shadow: 0 2px 8px rgba(0,0,0,0.08);
        transition: transform 0.2s;
    }

    .stat-card:hover {
        transform: translateY(-5px);
        box-shadow: 0 4px 12px rgba(0,0,0,0.12);
    }

    .icon-box {
        width: 56px;
        height: 56px;
        border-radius: 12px;
        display: flex;
        align-items: center;
        justify-content: center;
        font-size: 28px;
    }

    .bg-gradient-blue {
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
    }

    .bg-gradient-green {
        background: linear-gradient(135deg, #f093fb 0%, #f5576c 100%);
    }

    .bg-gradient-orange {
        background: linear-gradient(135deg, #4facfe 0%, #00f2fe 100%);
    }

    .bg-gradient-red {
        background: linear-gradient(135deg, #fa709a 0%, #fee140 100%);
    }

    .room-status-indicator {
        width: 12px;
        height: 12px;
        border-radius: 50%;
        display: inline-block;
        margin-right: 8px;
    }

    .status-available {
        background-color: #10b981;
    }

    .status-occupied {
        background-color: #ef4444;
    }

    .status-maintenance {
        background-color: #f59e0b;
    }

    .timeline-item {
        border-left: 2px solid #e5e7eb;
        padding-left: 20px;
        padding-bottom: 20px;
        position: relative;
    }

        .timeline-item:last-child {
            border-left: none;
        }

    .timeline-icon {
        position: absolute;
        left: -13px;
        width: 24px;
        height: 24px;
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
        font-size: 14px;
        color: white;
    }

    .chart-container {
        position: relative;
        height: 280px;
    }

    .occupancy-circle {
        width: 150px;
        height: 150px;
        border-radius: 50%;
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
        margin: 0 auto;
        position: relative;
    }

    .progress-ring {
        transform: rotate(-90deg);
    }

    .progress-ring-circle {
        transition: stroke-dashoffset 0.5s;
    }

    .table td {
        padding-left: 1.5rem;
    }
</style>
